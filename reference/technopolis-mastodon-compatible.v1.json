{
  "openapi": "3.0.0",
  "info": {
    "title": "Technopolis Mastodon compatible API",
    "version": "1.0.0",
    "description": "Technopolis RESTful API (Mastodon compatible)",
    "contact": {
      "name": "Offical Discord server",
      "url": "https://discord.gg/PBp8rJt"
    },
    "license": {
      "name": "GNU Free Documentation License Version 1.3",
      "url": "https://www.gnu.org/licenses/fdl-1.3.txt"
    }
  },
  "servers": [
    {
      "url": "http://technopolis.example.org"
    }
  ],
  "paths": {
    "/api/v1/apps": {
      "post": {
        "summary": "Create an application",
        "tags": [
          "apps"
        ],
        "responses": {
          "200": {
            "description": "Store the client_id and client_secret in your cache, as these will be used to obtain OAuth tokens.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "website": {
                      "type": "string"
                    },
                    "redirect_uri": {
                      "type": "string"
                    },
                    "client_id": {
                      "type": "string"
                    },
                    "client_secret": {
                      "type": "string"
                    },
                    "vapid_key": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "id": "47e6315b-ddc0-40bc-ab4e-84182155bfcb",
                      "name": "Example application",
                      "website": "https://example.org/example-app",
                      "redirect_uri": "urn:ietf:wg:oauth:2.0:oob",
                      "client_id": "< CLIENT ID HERE >",
                      "client_secret": "< CLIENT SECRET HERE >",
                      "vapid_key": "<VAPID KEY HERE>"
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "422": {
            "description": "If a required parameter is missing or improperly formatted, the request will fail.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "error": "Validation failed: Redirect URI must be an absolute URI."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-v1-apps",
        "description": "Create a new application to obtain OAuth2 credentials.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_name": {
                    "type": "string",
                    "description": "A name for your application"
                  },
                  "redirect_uris": {
                    "type": "string",
                    "description": "Where the user should be redirected after authorization. To display the authorization code to the user instead of redirecting to a web page, use urn:ietf:wg:oauth:2.0:oob in this parameter."
                  },
                  "scopes": {
                    "type": "string",
                    "description": "Space separated list of scopes. If none is provided, defaults to read."
                  },
                  "website": {
                    "type": "string",
                    "description": "A URL to the homepage of your app"
                  }
                },
                "required": [
                  "client_name",
                  "redirect_uris"
                ]
              }
            }
          },
          "description": ""
        }
      }
    },
    "/api/v1/apps/verify_credentials": {
      "get": {
        "summary": "Verify your app works",
        "tags": [
          "apps"
        ],
        "responses": {
          "200": {
            "description": "If the Authorization header was provided with a valid token, you should see your app returned as an Application entity.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "website": {
                      "type": "string"
                    },
                    "vapid_key": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "name": "example application",
                      "website": "https://example.org/example-app",
                      "vapid_key": "< VAPID KEY HERE>"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If the Authorization header contains an invalid token, is malformed, or is not present, an error will be returned indicating an authorization failure.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "error": "The access token is invalid"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-api-v1-apps-verify_credentials",
        "description": "Confirm that the app's OAuth2 credentials work.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer <app token>",
            "required": true
          }
        ]
      }
    },
    "/oauth/authorize": {
      "get": {
        "summary": "Authorize a user",
        "tags": [
          "oauth"
        ],
        "responses": {
          "200": {
            "description": "The authorization code will be returned as a query parameter named code.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "example": {
                    "value": "https://example.org/example-app?code=qDFUEaYrRK5c-HNmTCJbAzazwLRInJ7VHFat0wcMgCU"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the authorization code is incorrect or has been used already, the request will fail.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "error_description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "error": "invalid_grant",
                      "error_description": "The provided authorization grant is invalid, expired, revoked, does not match the redirection URI used in the authorization request, or was issued to another client."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-oauth-authorize",
        "description": "Displays an authorization form to the user. If approved, it will create and return an authorization code, then redirect to the desired redirect_uri, or show the authorization code if urn:ietf:wg:oauth:2.0:oob was requested. The authorization code can be used while requesting a token to obtain access to user-level methods.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "force_login",
            "description": "Forces the user to re-login, which is necessary for authorizing with multiple accounts from the same instance."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "response_type",
            "required": true,
            "description": "Should be set equal to code."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "client_id",
            "required": true,
            "description": "Client ID, obtained during app registration."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "redirect_uri",
            "required": true,
            "description": "Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the authorization code will be shown instead. Must match one of the redirect URIs declared during app registration."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "scope",
            "description": "List of requested OAuth scopes, separated by spaces (or by pluses, if using query parameters). Must be a subset of scopes declared during app registration. If not provided, defaults to read."
          }
        ]
      }
    },
    "/oauth/token": {
      "post": {
        "summary": "Obtain a token",
        "tags": [
          "oauth"
        ],
        "responses": {
          "200": {
            "description": "Store this access_token for later use with auth-required methods. The token should be passed as an HTTP Authorization header when making API calls, with the value Bearer access_token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "token_type": {
                      "type": "string"
                    },
                    "scope": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "integer"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "access_token": "v2.local.QAxIpVe-ECVNI1z4xQbm_qQYomyT3h8FtV8bxkz8pBJWkT8f7HtlOpbroPDEZUKop_vaglyp76CzYy375cHmKCW8e1CCkV0Lflu4GTDyXMqQdpZMM1E6OaoQW27gaRSvWBrR3IgbFIa0AkuUFw.UGFyYWdvbiBJbml0aWF0aXZlIEVudGVycHJpc2Vz",
                      "token_type": "Bearer",
                      "scope": "read write follow push",
                      "created_at": 1593492030
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If you try to request a scope that was not included when registering the app, the request will fail.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "error_description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "error": "invalid_scope",
                      "error_description": "The requested scope is invalid, unknown, or malformed."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If client_id and client_secret do not match or are invalid, the request will fail.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "error_description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "error": "invalid_client",
                      "error_description": "Client authentication failed due to unknown client, no client authentication included, or unsupported authentication method."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-oauth-token",
        "description": "Returns an access token, to be used during API calls that are not public.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "Client ID, obtained during app registration"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Client secret, obtained during app registration"
                  },
                  "redirect_uri": {
                    "type": "string",
                    "description": "Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the token will be shown instead. Must match one of the redirect URIs declared during app registration."
                  },
                  "scope": {
                    "type": "string",
                    "description": "List of requested OAuth scopes, separated by spaces. Must be a subset of scopes declared during app registration. If not provided, defaults to read."
                  },
                  "code": {
                    "type": "string",
                    "description": "A user authorization code, obtained via /oauth/authorize"
                  },
                  "grant_type": {
                    "type": "string",
                    "description": "Set equal to authorization_code if code is provided in order to gain user-level access. Otherwise, set equal to client_credentials to obtain app-level access only."
                  }
                },
                "required": [
                  "client_id",
                  "client_secret",
                  "redirect_uri",
                  "grant_type"
                ]
              }
            }
          },
          "description": "Returns an access token, to be used during API calls that are not public."
        }
      }
    },
    "/oauth/revoke": {
      "post": {
        "summary": "Revoke token",
        "tags": [
          "oauth"
        ],
        "responses": {
          "200": {
            "description": "If you own the provided token, the API call will provide an empty response. This operation is idempotent, so calling this API multiple times will still return OK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {}
                  }
                }
              }
            }
          },
          "403": {
            "description": "If you provide a token you do not own, or no token at all, the API call will return a 403 error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "error_description": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "error": "unauthorized_client",
                      "error_description": "You are not authorized to revoke this token"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-oauth-revoke",
        "description": "Revoke an access token to make it no longer valid for use.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "Client ID, obtained during app registration"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "Client secret, obtained during app registration"
                  },
                  "token": {
                    "type": "string",
                    "description": "The previously obtained token, to be invalidated"
                  }
                },
                "required": [
                  "client_id",
                  "client_secret",
                  "token"
                ]
              }
            }
          },
          "description": ""
        }
      }
    },
    "/api/v1/accounts": {
      "post": {
        "summary": "Register an account",
        "tags": [
          "accounts"
        ],
        "responses": {
          "200": {
            "description": "Note the extra source property, which is not visible on accounts other than your own. Also note that plain-text is used within source and HTML is used for their corresponding properties such as note and fields.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "acct": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "locked": {
                      "type": "string"
                    },
                    "bot": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "avatar": {
                      "type": "string"
                    },
                    "avater_static": {
                      "type": "string"
                    },
                    "header": {
                      "type": "string"
                    },
                    "header_static": {
                      "type": "string"
                    },
                    "followers_count": {
                      "type": "integer"
                    },
                    "following_count": {
                      "type": "integer"
                    },
                    "statuses_count": {
                      "type": "integer"
                    },
                    "last_status_at": {
                      "type": "string"
                    },
                    "source": {
                      "type": "object",
                      "properties": {
                        "privacy": {
                          "type": "string"
                        },
                        "sensitive": {
                          "type": "string"
                        },
                        "language": {
                          "type": "string"
                        },
                        "note": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "verified_at": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "follow_requests_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "emojis": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "shortcodeu": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          },
                          "static_url": {
                            "type": "string"
                          },
                          "visible_in_picker": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          },
                          "verified_at": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "id": "845405fb-2b26-478b-9633-e991b86f47b8",
                      "username": "example",
                      "acct": "example",
                      "display_name": "アカウントの例",
                      "locked": false,
                      "bot": false,
                      "created_at": "2020-07-01T00:00:00.000Z",
                      "note": "このアカウントはただの例だ。",
                      "url": "https://technopolis.example.org/@example",
                      "avatar": "https://s3.example.social/example.png",
                      "avatar_static": "https://s3.example.social/example.png",
                      "header": "https://s3.example.social/example.png",
                      "header_static": "https://s3.example.social/example.png",
                      "followers_count": 114,
                      "following_count": 514,
                      "statuses_count": 810100081,
                      "source": {
                        "privacy": "public",
                        "sensitive": false,
                        "language": "ja-fukushima",
                        "note": "このアカウントはただの例だ。",
                        "fields": [
                          {
                            "name": "ウェブサイト",
                            "value": "https://www.pref.fukushima.lg.jp/",
                            "verified_at": "2020-07-07T00:00:00.000+00:00"
                          },
                          {
                            "name": "COVID-19",
                            "value": "https://fukushima-covid19.web.app",
                            "verified_at": "2020-07-07T00:00:00.000+00:00"
                          }
                        ],
                        "follow_requests_count": 0
                      },
                      "emojis": [],
                      "fields": [
                        {
                          "name": "Website",
                          "value": "<a href=\"https://www.pref.fukushima.lg.jp/\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"><span class=\"invisible\">https://</span><span class=\"\">www.pref.fukushima.lg.jp</span><span class=\"invisible\"></span></a>",
                          "verified_at": "2020-07-07T00:00:00.000+00:00"
                        },
                        {
                          "name": "COVID-19",
                          "value": "<a href=\"https://fukushima-covid19.web.app\" rel=\"me nofollow noopener noreferrer\" target=\"_blank\"><span class=\"invisible\">https://</span><span class=\"\">fukushima-covid19.web.app</span><span class=\"invisible\"></span></a>",
                          "verified_at": "2020-07-07T00:00:00.000+00:00"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "\nYour credential verification will fail if the token is invalid or incorrect.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "error": "The access token is invalid"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-api-v1-accounts",
        "description": "Creates a user and account records. Returns an account access token for the app that initiated the request. The app should save this token for later, and should wait for the user to confirm their account by clicking a link in their email inbox.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Bearer <app token>",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "Text that will be reviewed by moderators if registrations require manual approval."
                  },
                  "username": {
                    "type": "string",
                    "description": "The desired username for the account"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email address to be used for login"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password to be used for login"
                  },
                  "agreement": {
                    "type": "string",
                    "description": "Whether the user agrees to the local rules, terms, and policies. These should be presented to the user in order to allow them to consent before setting this parameter to TRUE."
                  },
                  "locale": {
                    "type": "string",
                    "description": "The language of the confirmation email that will be sent"
                  }
                },
                "required": [
                  "username",
                  "email",
                  "password",
                  "agreement",
                  "locale"
                ]
              }
            }
          },
          "description": ""
        }
      }
    }
  },
  "components": {
    "schemas": {}
  }
}