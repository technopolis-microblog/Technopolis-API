{
  "openapi": "3.0.0",
  "info": {
    "title": "Technopolis API",
    "version": "1.0.0",
    "contact": {
      "name": "Offical Discord server",
      "url": "https://discord.gg/PBp8rJt"
    },
    "license": {
      "name": "GNU Free Documentation License Version 1.3",
      "url": "https://www.gnu.org/licenses/fdl-1.3.txt"
    },
    "description": "Technopolis RESTful API"
  },
  "servers": [
    {
      "url": "http://technopolis.example.org/api/v1"
    }
  ],
  "paths": {
    "/oauth/token": {
      "get": {
        "summary": "Authorize a user",
        "tags": [
          "oauth"
        ],
        "operationId": "get-oauth-token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forceLogin": {
                    "type": "boolean"
                  },
                  "responseType": {
                    "type": "string"
                  },
                  "clientID": {
                    "type": "string"
                  },
                  "redirectURI": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "string"
                  }
                },
                "required": [
                  "forceLogin",
                  "responseType",
                  "clientID",
                  "redirectURI"
                ]
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                },
                "required": true
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "example": {
                    "value": "redirectURI?code=v2.local.QAxIpVe-ECVNI1z4xQbm_qQYomyT3h8FtV8bxkz8pBJWkT8f7HtlOpbroPDEZUKop_vaglyp76CzYy375cHmKCW8e1CCkV0Lflu4GTDyXMqQdpZMM1E6OaoQW27gaRSvWBrR3IgbFIa0AkuUFw.UGFyYWdvbiBJbml0aWF0aXZlIEVudGVycHJpc2Vz"
                  }
                }
              }
            }
          }
        },
        "description": ""
      },
      "delete": {
        "summary": "Revoke token",
        "tags": [
          "oauth"
        ],
        "responses": {},
        "operationId": "delete-oauth-token"
      },
      "post": {
        "summary": "Obtain a token",
        "tags": [
          "oauth"
        ],
        "responses": {},
        "operationId": "post-oauth-token"
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "description": "The user model is almost the same as Mastodon account model. but, one difference is that Actor of Activitystream is separate.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "locked": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "email",
          "createdAt",
          "locked"
        ]
      },
      "Actor": {
        "title": "Actor",
        "type": "object",
        "description": "Actor model represents an Actor. It's associated with the User model.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid"
          },
          "actorType": {
            "type": "string",
            "enum": [
              "Application",
              "Group",
              "Person"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "pattern": "^[A-Za-z0-9_]+"
          },
          "displayName": {
            "type": "string",
            "maxLength": 32
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "header": {
            "type": "string",
            "format": "uri"
          },
          "followersCount": {
            "type": "integer"
          },
          "followingCount": {
            "type": "integer"
          },
          "statusesCount": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "owner",
          "actorType",
          "name",
          "followersCount",
          "followingCount",
          "statusesCount"
        ]
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "error",
          "message"
        ],
        "x-examples": {},
        "description": "Error model represents an Error."
      }
    }
  }
}