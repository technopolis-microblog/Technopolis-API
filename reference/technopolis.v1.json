{
  "openapi": "3.0.0",
  "info": {
    "title": "Technopolis API",
    "version": "1.0.0",
    "contact": {
      "name": "Offical Discord server",
      "url": "https://discord.gg/PBp8rJt"
    },
    "license": {
      "name": "GNU Free Documentation License Version 1.3",
      "url": "https://www.gnu.org/licenses/fdl-1.3.txt"
    },
    "description": "Technopolis RESTful API"
  },
  "servers": [
    {
      "url": "http://technopolis.example.org/api/v1"
    }
  ],
  "paths": {
    "/oauth/token": {
      "get": {
        "summary": "Authorize a user",
        "tags": [
          "oauth"
        ],
        "operationId": "get-oauth-token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "forceLogin": {
                    "type": "boolean"
                  },
                  "responseType": {
                    "type": "string"
                  },
                  "clientID": {
                    "type": "string"
                  },
                  "redirectURI": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "string"
                  }
                },
                "required": [
                  "forceLogin",
                  "responseType",
                  "clientID",
                  "redirectURI"
                ]
              }
            }
          }
        },
        "responses": {
          "302": {
            "description": "The authorization code will be returned as a query parameter named code.",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string",
                  "format": "uri"
                },
                "required": true
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "example": {
                    "value": "redirectURI?code=y42iXs3uKhp9bNSY3dvXQYQPtxLeRTdU22DBRLcuf8DHucDv3sRdcFutihpkjVcW"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the authorization code is incorrect or has been used already, the request will fail.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-ja": {
                    "value": {
                      "error": "INVALID_GRANT",
                      "message": "認可グラントが無効です。"
                    }
                  },
                  "example-en": {
                    "value": {
                      "error": "INVALID_GRANT",
                      "message": "The authorization grant is invalid."
                    }
                  }
                }
              }
            }
          }
        },
        "description": ""
      },
      "delete": {
        "summary": "Revoke token",
        "tags": [
          "oauth"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-ja": {
                    "value": {
                      "error": "INVALID_TOKEN",
                      "message": "トークンが不正です。"
                    }
                  },
                  "example-en": {
                    "value": {
                      "error": "INVALID_TOKEN",
                      "message": "トークンが不正です。"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "delete-oauth-token",
        "description": "Revoke an access token to make it no longer valid for use.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientID": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  },
                  "token": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientID",
                  "clientSecret",
                  "token"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "post": {
        "summary": "Obtain a token",
        "tags": [
          "oauth"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "tokenType": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "access_token": "v2.local.QAxIpVe-ECVNI1z4xQbm_qQYomyT3h8FtV8bxkz8pBJWkT8f7HtlOpbroPDEZUKop_vaglyp76CzYy375cHmKCW8e1CCkV0Lflu4GTDyXMqQdpZMM1E6OaoQW27gaRSvWBrR3IgbFIa0AkuUFw.UGFyYWdvbiBJbml0aWF0aXZlIEVudGVycHJpc2Vz",
                      "token_type": "Bearer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If you try to request a scope that was not included when registering the app, the request will fail.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-ja": {
                    "value": {
                      "error": "INVALID_SCOPE",
                      "message": "リクエストされたスコープは無効です。"
                    }
                  },
                  "example-en": {
                    "value": {
                      "error": "invalid_scope",
                      "message": "The requested scope is invalid."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If clientID and clientSecret do not match or are invalid, the request will fail.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-ja": {
                    "value": {
                      "error": "INVALID_CLIENT",
                      "message": "クライアント認証に失敗しました。クライアントIDまたはシークレットが不正です。"
                    }
                  },
                  "example-en": {
                    "value": {
                      "error": "INVALID_CLIENT",
                      "message": "Client authentication failed. The client ID or secret is invalid."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-oauth-token",
        "description": "Returns an access token, to be used during API calls that are not public.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clientID": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  },
                  "redirectURI": {
                    "type": "string"
                  },
                  "scopes": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "grantType": {
                    "type": "string"
                  }
                },
                "required": [
                  "clientID",
                  "clientSecret",
                  "redirectURI",
                  "grantType"
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "description": "The user model is almost the same as Mastodon account model. but, one difference is that Actor of Activitystream is separate.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "locked": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "email",
          "createdAt",
          "locked"
        ]
      },
      "Actor": {
        "title": "Actor",
        "type": "object",
        "description": "Actor model represents an Actor. It's associated with the User model.",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "owner": {
            "type": "string",
            "format": "uuid"
          },
          "actorType": {
            "type": "string",
            "enum": [
              "Application",
              "Group",
              "Person"
            ]
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 16,
            "pattern": "^[A-Za-z0-9_]+"
          },
          "displayName": {
            "type": "string",
            "maxLength": 32
          },
          "avatar": {
            "type": "string",
            "format": "uri"
          },
          "header": {
            "type": "string",
            "format": "uri"
          },
          "followersCount": {
            "type": "integer"
          },
          "followingCount": {
            "type": "integer"
          },
          "statusesCount": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": [
          "id",
          "owner",
          "actorType",
          "name",
          "followersCount",
          "followingCount",
          "statusesCount"
        ]
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "error",
          "message"
        ],
        "x-examples": {},
        "description": "Error model represents an Error."
      }
    }
  }
}